import Head from 'next/head'
import containerStyles from '../styles/Container.module.css'
import styles from '../styles/RepoPage.module.css'
import { useEffect, useState } from 'react'
import Link from 'next/link'

export async function getStaticPaths() {
    return {
      paths: [],
      fallback: true
    };
}


export async function getStaticProps({ params }) {
    const res = await fetch(`https://api.github.com/repos/${process.env.REPO_USERNAME}/${params.name}`)
    const repoData = await res.json()

    
    let myHeaders = new Headers();
    myHeaders.append('Authorization', `token ${process.env.API_TOKEN}`);

    const collaboratorsRes = await fetch(`https://api.github.com/repos/${process.env.REPO_USERNAME}/${params.name}/collaborators`,
    {
        headers: myHeaders
    })
    const collaborators = await collaboratorsRes.json()

    const issuesRes = await fetch(`https://api.github.com/repos/${process.env.REPO_USERNAME}/${params.name}/issues`,
    {
        headers: myHeaders
    })
    const issues = await issuesRes.json()
  
    if (!repoData) {
      return {
        notFound: true,
      }
    }
  
    return {
      props: {
        repoData,
        collaborators,
        issues
      },
    }
}

export default function RepoStatPage ({ repoData, collaborators, issues}) {
    const [displayedData, setDisplayedData] = useState(repoData);

    useEffect(() => {
        setDisplayedData(repoData);
    }, [repoData]);

    return (
        <div className={containerStyles.container}>
            <Head>
                <title>{displayedData?.full_name}</title>
                <meta name="Github Indicators Explorer" content="Generated by create next app" />
                <link rel="icon" href="/favicon.ico" />
            </Head>

            <main className={styles.main}>
                <Link href='/'>
                    <p className={styles.choose_repo}>Choose another repository</p>
                </Link>

                <div>
                    <div className={styles.name_container}>
                        <img className={styles.avatar} src={displayedData?.owner?.avatar_url}/>
                        <h2 className={styles.repo_name}>{displayedData?.full_name}</h2>
                    </div>
                    <p className={styles.description}>{displayedData?.description}</p>
                </div>

                <p>{collaborators ? collaborators[0].login : ""}</p>
                <p>{issues ? (issues.length > 0 ? issues[0].title : "") : ""}</p>
            </main>

        </div>
    )
}